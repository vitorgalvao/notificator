#!/bin/bash

readonly program="$(basename "${0}")"
readonly app_name='Notificator.app'
readonly tmp_dir="$(mktemp -d)"

function usage {
  echo "
    Usage:
      ${program} --icon <path> --bundle-id <text> [--output-dir <path>]

    Options:
      -i, --icon <path>         Path to image to use as the icon.
      -b, --bundle-id <text>    Bundle ID to use.
      -o, --output-dir <path>   Directory to output the app to. Defaults to the Desktop.
      -h, --help                Show this help.
  " | sed -E 's/^ {4}//'
}

function make_icns {
  local -r file="${1}"
  local -r iconset="$(mktemp -d)"
  local -r output_icon="$(mktemp).icns"

  for size in {16,32,64,128,256,512}; do
    sips --resampleHeightWidth "${size}" "${size}" "${file}" --out "${iconset}/icon_${size}x${size}.png" &> /dev/null
    sips --resampleHeightWidth "$((size * 2))" "$((size * 2))" "${file}" --out "${iconset}/icon_${size}x${size}@2x.png" &> /dev/null
  done

  mv "${iconset}" "${iconset}.iconset"
  iconutil --convert icns "${iconset}.iconset" --output "${output_icon}"

  echo "${output_icon}" # So its path is returned when the function ends
}

# Options
args=()
while [[ "${1}" ]]; do
  case "${1}" in
    -h | --help)
      usage
      exit 0
      ;;
    -i | --icon)
      image="${2}"
      shift
      ;;
    -b | --bundle-id)
      bundle_id="${2}"
      shift
      ;;
    -o | --output-dir)
      output_dir="${2}"
      shift
      ;;
    --)
      shift
      args+=("${@}")
      break
      ;;
    -*)
      echo "Unrecognised option: ${1}"
      exit 1
      ;;
    *)
      args+=("${1}")
      ;;
  esac
  shift
done
set -- "${args[@]}"

if [[ -z "${image}" ]] || [[ -z "${bundle_id}" ]]; then
  echo 'You need to give both the path to an image and a bundle ID.' >&2
  exit 1
fi

readonly notificator_release="$(curl --silent 'https://api.github.com/repos/vitorgalvao/notificator/releases/latest' | grep 'browser_download_url' | awk '{ print $2 }' | sed 's/"//g')"

curl --silent --location "${notificator_release}" | ditto -xk - "${tmp_dir}"
[[ "${image}" == *'.icns' ]] && icon="${image}" || icon="$(make_icns "${image}")"
cp "${icon}" "${tmp_dir}/${app_name}/Contents/Resources/applet.icns"
/usr/libexec/PlistBuddy -c "set CFBundleIdentifier ${bundle_id}" "${tmp_dir}/${app_name}/Contents/Info.plist"

if [[ -n "${output_dir}" ]]; then
  mv "${tmp_dir}/${app_name}" "${output_dir}"
else
  mv "${tmp_dir}/${app_name}" "${HOME}/Desktop"
  echo "Notificator was downloaded to your Desktop."
fi
